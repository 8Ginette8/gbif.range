raster::extract
devtools::document()
system("R CMD Rd2pdf . --title=wsl.biodiv --output=./wsl_biodiv.pdf --force --no-clean --internals")
library(wsl.biodiv)
install.packages("wsl.biodiv_r_package",repos=NULL,type="source")
setwd("C:/Users/Public/Documents/SwitchDrive/gitlab")
install.packages("wsl.biodiv_r_package",repos=NULL,type="source")
install.packages("wsl.biodiv_r_package",repos=NULL,type="source")
install.packages("../wsl.biodiv_r_package",repos=NULL,type="source")
install.packages("../wsl.biodiv_r_package",repos=NULL,type="source")
install.packages("wsl.biodiv_r_package",repos=NULL,type="source")
install.packages("../wsl.biodiv_r_package",repos=NULL,type="source")
devtools::document()
system("R CMD Rd2pdf . --title=wsl.biodiv --output=./wsl_biodiv.pdf --force --no-clean --internals")
install.packages("wsl.biodiv_r_package",repos=NULL,type="source")
install.packages("../wsl.biodiv_r_package",repos=NULL,type="source")
library(wsl.biodiv)
devtools::document()
system("R CMD Rd2pdf . --title=wsl.biodiv --output=./wsl_biodiv.pdf --force --no-clean --internals")
devtools::document()
system("R CMD Rd2pdf . --title=wsl.biodiv --output=./wsl_biodiv.pdf --force --no-clean --internals")
devtools::document()
system("R CMD Rd2pdf . --title=wsl.biodiv --output=./wsl_biodiv.pdf --force --no-clean --internals")
devtools::document()
system("R CMD Rd2pdf . --title=wsl.biodiv --output=./wsl_biodiv.pdf --force --no-clean --internals")
devtools::document()
system("R CMD Rd2pdf . --title=wsl.biodiv --output=./wsl_biodiv.pdf --force --no-clean --internals")
devtools::document()
system("R CMD Rd2pdf . --title=wsl.biodiv --output=./wsl_biodiv.pdf --force --no-clean --internals")
devtools::document()
system("R CMD Rd2pdf . --title=wsl.biodiv --output=./wsl_biodiv.pdf --force --no-clean --internals")
install.packages("wsl.biodiv_r_package",repos=NULL,type="source")
install.packages("./wsl.biodiv_r_package",repos=NULL,type="source")
install.packages("../wsl.biodiv_r_package",repos=NULL,type="source")
devtools::document()
system("R CMD Rd2pdf . --title=wsl.biodiv --output=./wsl_biodiv.pdf --force --no-clean --internals")
remove.packages("wsl.biodiv")
library(wsl.biodiv)
install.packages("../wsl.biodiv_r_package",repos=NULL,type="source")
remove.packages("wsl.biodiv")
devtools::document()
system("R CMD Rd2pdf . --title=wsl.biodiv --output=./wsl_biodiv.pdf --force --no-clean --internals")
install.packages("../wsl.biodiv_r_package",repos=NULL,type="source")
remove.packages(("wsl.biodiv"))
devtools::document()
system("R CMD Rd2pdf . --title=wsl.biodiv --output=./wsl_biodiv.pdf --force --no-clean --internals")
install.packages("../wsl.biodiv_r_package",repos=NULL,type="source")
remove.packages("wsl.biodiv")
devtools::document()
system("R CMD Rd2pdf . --title=wsl.biodiv --output=./wsl_biodiv.pdf --force --no-clean --internals")
install.packages("../wsl.biodiv_r_package",repos=NULL,type="source")
devtools::document()
system("R CMD Rd2pdf . --title=wsl.biodiv --output=./wsl_biodiv.pdf --force --no-clean --internals")
devtools::document()
system("R CMD Rd2pdf . --title=wsl.biodiv --output=./wsl_biodiv.pdf --force --no-clean --internals")
remove.packges(wsl.biodiv)
remove.packages(wsl.biodiv)
remove.packages("wsl.biodiv")
install.packages("../wsl.biodiv_r_package",repos=NULL,type="source")
remove.packages("wsl.biodiv")
devtools::document()
system("R CMD Rd2pdf . --title=wsl.biodiv --output=./wsl_biodiv.pdf --force --no-clean --internals")
install.packages("../wsl.biodiv_r_package",repos=NULL,type="source")
devtools::document()
system("R CMD Rd2pdf . --title=wsl.biodiv --output=./wsl_biodiv.pdf --force --no-clean --internals")
remove.packages("wsl.biodiv")
install.packages("../wsl.biodiv_r_package",repos=NULL,type="source")
devtools::document()
system("R CMD Rd2pdf . --title=wsl.biodiv --output=./wsl_biodiv.pdf --force --no-clean --internals")
remove.packages("wsl.biodiv")
install.packages("../wsl.biodiv_r_package",repos=NULL,type="source")
remove.packages("wsl.biodiv)")
remove.packages("wsl.biodiv")
devtools::document()
ls()
system("R CMD Rd2pdf . --title=wsl.biodiv --output=./wsl_biodiv.pdf --force --no-clean --internals")
devtools::document()
system("R CMD Rd2pdf . --title=wsl.biodiv --output=./wsl_biodiv.pdf --force --no-clean --internals")
install.packages("../wsl.biodiv_r_package",repos=NULL,type="source")
devtools::document()
system("R CMD Rd2pdf . --title=wsl.biodiv --output=./wsl_biodiv.pdf --force --no-clean --internals")
remove.packages("wsl.biodiv")
install.packages("../wsl.biodiv_r_package",repos=NULL,type="source")
devtools::document()
system("R CMD Rd2pdf . --title=wsl.biodiv --output=./wsl_biodiv.pdf --force --no-clean --internals")
remove.packages("wsl.biodiv")
install.packages("../wsl.biodiv_r_package",repos=NULL,type="source")
devtools::document()
system("R CMD Rd2pdf . --title=wsl.biodiv --output=./wsl_biodiv.pdf --force --no-clean --internals")
remove.packages("wsl.biodiv")
install.packages("../wsl.biodiv_r_package",repos=NULL,type="source")
library(rgbif)
install.packages("rgbif")
library(rgbif)
name_backbone("Acer")
install.packages("../wsl.biodiv_r_package",repos=NULL,type="source")
install.packages("../wsl.biodiv_r_package",repos=NULL,type="source",dependencies=TRUE)
install.packages("snow")
install.packages("gbm")
install.packages("randomForest")
install.packages("ROCR")
install.packages("NMOF")
install.packages("doParallel")
install.packages("spatstat")
install.packages("usdm")
install.packages("neuralnet")
install.packages("../wsl.biodiv_r_package",repos=NULL,type="source")
devtools::document()
system("R CMD Rd2pdf . --title=wsl.biodiv --output=./wsl_biodiv.pdf --force --no-clean --internals")
devtools::document()
system("R CMD Rd2pdf . --title=wsl.biodiv --output=./wsl_biodiv.pdf --force --no-clean --internals")
devtools::document()
system("R CMD Rd2pdf . --title=wsl.biodiv --output=./wsl_biodiv.pdf --force --no-clean --internals")
# To update changes
devtools::document()
# To update documentation
system("R CMD Rd2pdf . --title=wsl.biodiv --output=./wsl_biodiv.pdf --force --no-clean --internals")
# To update changes
devtools::document()
# To update documentation
system("R CMD Rd2pdf . --title=wsl.biodiv --output=./wsl_biodiv.pdf --force --no-clean --internals")
# To update changes
devtools::document()
# To update documentation
system("R CMD Rd2pdf . --title=wsl.biodiv --output=./wsl_biodiv.pdf --force --no-clean --internals")
# To update changes
devtools::document()
# To update documentation
system("R CMD Rd2pdf . --title=wsl.biodiv --output=./wsl_biodiv.pdf --force --no-clean --internals")
remove.packages("wsl.biodiv"")
""
remove.packages("wsl.biodiv")
install.packages("../wsl.biodiv_r_package",repos=NULL,type="source")
install.packages("../wsl.biodiv_r_package",repos=NULL,type="source")
install.packages("./wsl.biodiv_r_package",repos=NULL,type="source")
install.packages("../wsl.biodiv_r_package",repos=NULL,type="source")
install.packages("../wsl.biodiv_r_package",repos=NULL,type="source")
library(wsl.biodiv)
?wsl.gbif
?wsl.glm
?wsl.gbif
library(wsl.plot)
install.packages("../wsl.biodiv_r_package",repos=NULL,type="source")
wsl.gbif
ws_.gbif
library(wsl.plot)
library(wsl.biodiv)
ws_.gbif
wsl.gbif
wsl.gbif("asteraceae"")
c
""
wsl.gbif("asteraceae")
wsl.gbif("asteraceee")
wsl.gbif("Aster")
remove.packages("wsl.biodiv")
devtools::document()
system("R CMD Rd2pdf . --title=wsl.biodiv --output=./wsl_biodiv.pdf --force --no-clean --internals")
install.packages("../wsl.biodiv_r_package",repos=NULL,type="source")
remove.packages("wsl.biodiv")
devtools::document()
devtools::document()
system("R CMD Rd2pdf . --title=wsl.biodiv --output=./wsl_biodiv.pdf --force --no-clean --internals")
stall.packages("../wsl.biodiv_r_package",repos=NULL,type="source")
install.packages("../wsl.biodiv_r_package",repos=NULL,type="source")
remove.packages("wsl.biodiv")
devtools::document()
system("R CMD Rd2pdf . --title=wsl.biodiv --output=./wsl_biodiv.pdf --force --no-clean --internals")
remove.packages("wsl.biodiv")
devtools::document()
system("R CMD Rd2pdf . --title=wsl.biodiv --output=./wsl_biodiv.pdf --force --no-clean --internals")
install.packages("../wsl.biodiv_r_package",repos=NULL,type="source")
remove.packages("wsl.biodiv")
devtools::document()
system("R CMD Rd2pdf . --title=wsl.biodiv --output=./wsl_biodiv.pdf --force --no-clean --internals")
install.packages("../wsl.biodiv_r_package",repos=NULL,type="source")
remove.packages("wsl.biodiv")
devtools::document()
system("R CMD Rd2pdf . --title=wsl.biodiv --output=./wsl_biodiv.pdf --force --no-clean --internals")
install.packages("../wsl.biodiv_r_package",repos=NULL,type="source")
remov.packages("wsl.biodiv")
remove.packages("wsl.biodiv")
devtools::document()
system("R CMD Rd2pdf . --title=wsl.biodiv --output=./wsl_biodiv.pdf --force --no-clean --internals")
install.packages("../wsl.biodiv_r_package",repos=NULL,type="source")
remove.packages("wsl.biodiv")
devtools::document()
devtools::document()
system("R CMD Rd2pdf . --title=wsl.biodiv --output=./wsl_biodiv.pdf --force --no-clean --internals")
install.packages("../wsl.biodiv_r_package",repos=NULL,type="source")
remove.packages("wsl.biodiv")
devtools::document()
system("R CMD Rd2pdf . --title=wsl.biodiv --output=./wsl_biodiv.pdf --force --no-clean --internals")
install.packages("../wsl.biodiv_r_package",repos=NULL,type="source")
devtools::document()
system("R CMD Rd2pdf . --title=wsl.biodiv --output=./wsl_biodiv.pdf --force --no-clean --internals")
install.packages("../wsl.biodiv_r_package",repos=NULL,type="source")
install.packages("../wsl.biodiv_r_package",repos=NULL,type="source")
library(wsl.gbif)
library(wsl.biodiv)
wsl.gbif("222")
remove.packages("wsl.biodiv")
devtools::document()
rlang::last_error()
install.packages("rgbif")
install.packages("CoordinateCleaner")
devtools::document()
system("R CMD Rd2pdf . --title=wsl.biodiv --output=./wsl_biodiv.pdf --force --no-clean --internals")
install.packages("../wsl.biodiv_r_package",repos=NULL,type="source")
remove.packages("wsl.biodiv")
devtools::document()
system("R CMD Rd2pdf . --title=wsl.biodiv --output=./wsl_biodiv.pdf --force --no-clean --internals")
install.packages("../wsl.biodiv_r_package",repos=NULL,type="source")
remove.packages("wsl.biodiv")
devtools::document()
devtools::document()
devtools::document()
devtools::document()
system("R CMD Rd2pdf . --title=wsl.biodiv --output=./wsl_biodiv.pdf --force --no-clean --internals")
install.packages("../wsl.biodiv_r_package",repos=NULL,type="source")
remove.packages("wsl.biodiv")
devtools::document()
system("R CMD Rd2pdf . --title=wsl.biodiv --output=./wsl_biodiv.pdf --force --no-clean --internals")
install.packages("../wsl.biodiv_r_package",repos=NULL,type="source")
devtools::document()
system("R CMD Rd2pdf . --title=wsl.biodiv --output=./wsl_biodiv.pdf --force --no-clean --internals")
install.packages("../wsl.biodiv_r_package",repos=NULL,type="source")
devtools::document()
system("R CMD Rd2pdf . --title=wsl.biodiv --output=./wsl_biodiv.pdf --force --no-clean --internals")
install.packages("../wsl.biodiv_r_package",repos=NULL,type="source")
remove.packages("wsl.biodiv"")
devtools::document()
system("R CMD Rd2pdf . --title=wsl.biodiv --output=./wsl_biodiv.pdf --force --no-clean --internals")
install.packages("../wsl.biodiv_r_package",repos=NULL,type="source")
remove.packages("wsl.biodiv")
devtools::document()
system("R CMD Rd2pdf . --title=wsl.biodiv --output=./wsl_biodiv.pdf --force --no-clean --internals")
install.packages("../wsl.biodiv_r_package",repos=NULL,type="source")
remove.packages("wsl.biodiv")
devtools::document()
system("R CMD Rd2pdf . --title=wsl.biodiv --output=./wsl_biodiv.pdf --force --no-clean --internals")
install.packages("../wsl.biodiv_r_package",repos=NULL,type="source")
remove.packages("wsl.biodiv")
devtools::document()
system("R CMD Rd2pdf . --title=wsl.biodiv --output=./wsl_biodiv.pdf --force --no-clean --internals")
install.packages("../wsl.biodiv_r_package",repos=NULL,type="source")
remove.packages("wsl.biodiv")
devtools::document()
system("R CMD Rd2pdf . --title=wsl.biodiv --output=./wsl_biodiv.pdf --force --no-clean --internals")
install.packages("../wsl.biodiv_r_package",repos=NULL,type="source")
wsl.evaluate.pres()
wsl.evaluate.pres
devtools::document()
system("R CMD Rd2pdf . --title=wsl.biodiv --output=./wsl_biodiv.pdf --force --no-clean --internals")
remove.packages("wsl.biodiv")
install.packages("../wsl.biodiv_r_package",repos=NULL,type="source")
library(wsl.biodiv)
?wsl.ebc
?wsl.ppmGlasso
install.packages("../wsl.biodiv_r_package",repos=NULL,type="source")
install.packages("snow")
install.packages("gbm")
install.packages("randomForest")
install.packages("ROCR")
install.packages("NMOF")
install.packages("spatstat")
install.packages("neuralnet")
install.packages("glmnet")
install.packages("coordinateCleaner")
install.packages("CoordinateCleaner")
install.packages("../wsl.biodiv_r_package",repos=NULL,type="source")
library(wsl.biodiv)
wsl.gbif()
wsl.gbif
wsl.gbif("Alagoas curassow")
wsl.gbif("Gymnogyps californianus")
wsl.gbif("Mitu mitu")
wsl.gbif("Mitu mitu",add_infos="hasGeospatialIssue")
wsl.gbif("Mitu mitu")
wsl.gbif("Abies alba")
wsl.gbif("Abies alba",tiles=100)
test=wsl.gbif("Abies alba")
test=wsl.gbif("Abies alba",tiles=10)
test=wsl.gbif("Abies alba",tiles=100)
test=wsl.gbif("Abies alba",tiles=1000)
remove.packages("wsl.biodiv")
install.packages("../wsl.biodiv_r_package",repos=NULL,type="source")
install.packages("../wsl.biodiv_r_package",repos=NULL,type="source")
library(wsl.biodiv)
?wsl.gbif
devtools::document()
system("R CMD Rd2pdf . --title=wsl.biodiv --output=./wsl_biodiv.pdf --force --no-clean --internals")
system("R CMD Rd2pdf . --title=wsl.biodiv --output=./wsl_biodiv.pdf --force --no-clean --internals")
install.packages("tools")
install.packages("tools")
install.packages("tools")
system("R CMD Rd2pdf . --title=wsl.biodiv --output=./wsl_biodiv.pdf --force --no-clean --internals")
system("R CMD Rd2pdf . --title=wsl.biodiv --output=./wsl_biodiv.pdf --force --no-clean --internals")
devtools::document()
system("R CMD Rd2pdf . --title=wsl.biodiv --output=./wsl_biodiv.pdf --force --no-clean --internals")
tinytex::parse_install("filename.log")
tinytex::parse_install()
tinytex::parse_install(letlxmacro.sty)
tinytex::parse_install("letlxmacro.sty)
tinytex::parse_install("letlxmacro.sty)
tinytex::parse_install("letlxmacro.sty")
devtools::document()
system("R CMD Rd2pdf . --title=wsl.biodiv --output=./wsl_biodiv.pdf --force --no-clean --internals")
tinytex::install_tinytex()
devtools::document()
system("R CMD Rd2pdf . --title=wsl.biodiv --output=./wsl_biodiv.pdf --force --no-clean --internals")
devtools::build_manual()
Sys.getenv
Sys.getenv("C:\Program Files\MiKTeX 2.9\miktex\bin\x64")
Sys.getenv("C:/Program Files/MiKTeX 2.9/miktex/bin/x64")
Sys.getenv("C:/Program Files/MiKTeX 2.9/miktex/bin/x64")
system("R CMD Rd2pdf . --title=wsl.biodiv --output=./wsl_biodiv.pdf --force --no-clean --internals")
remove.packages("wsl.biodiv")
devtools::document()
library(wsl.biodiv)
system("R CMD Rd2pdf . --title=wsl.biodiv --output=./wsl_biodiv.pdf --force --no-clean --internals")
install.packages("../wsl.biodiv_r_package",repos=NULL,type="source")
install.packages("../wsl.biodiv_r_package",repos=NULL,type="source")
devtools::document()
?wsl.taXnames
devtools::document()
system("R CMD Rd2pdf . --title=wsl.biodiv --output=./wsl_biodiv.pdf --force --no-clean --internals")
devtools::document()
system("R CMD Rd2pdf . --title=wsl.biodiv --output=./wsl_biodiv.pdf --force --no-clean --internals")
remove.packages("../wsl.biodiv_r_package",repos=NULL,type="source")
remove.packages("wsl.biodiv")
install.packages("../wsl.biodiv_r_package",repos=NULL,type="source")
devtools::document()
devtools::document()
devtools::document()
system("R CMD Rd2pdf . --title=wsl.gbif --output=./wsl_gbif.pdf --force --no-clean --internals")
install.packages("../wsl.gbif_r_package",repos=NULL,type="source")
library(wsl.gbif)
extent
raster
library(wsl.gbif)
?wsl.taXnames
wsl.taXnames("Cypripedium calceolus",all=FALSE)
wsl.taXnames("Cypripedium calceolus",all=TRUE)
?wsl.gbif
data(AlpineConvention_lonlat)
test2 = wsl.gbif("Ailuropoda melanoleuca", grain = 100000 , duplicates = TRUE,
time_period = c(1990,3000), add_infos = "recordedBy")
test2
devtools::document()
remove.packages("wsl.gbif")
install.packages("../wsl.gbif_r_package",repos=NULL,type="source")
remove.packages("wsl.gbif")
devtools::document()
system("R CMD Rd2pdf . --title=wsl.gbif --output=./wsl_gbif.pdf --force --no-clean --internals")
install.packages("../wsl.gbif_r_package",repos=NULL,type="source")
library(wsl.gbif)
wsl.gbif?
wsl.gbif
?wsl.gbif
data(AlpineConvention_lonlat)
test1 = wsl.gbif("Panthera tigris")
pwd=BUg7t%oE@Nh6
pwd="BUg7t%oE@Nh6"
usr="ginette"
rgbif::derived_dataset(test1,"GBIF_test",
"Filetred and cleaned based on CoordinateCleaner",source_url="",user=usr,pwd=pwd)
d.target = table(test1$datasetKey)
d.target
d.summary = data.frame(datasetKey = names(d.target),count = as.numeric(d.target))
d.summary
rgbif::derived_dataset(d.summary,"GBIF_test",
"Filetred and cleaned based on CoordinateCleaner",source_url="",user=usr,pwd=pwd)
d.summary
d.summary = data.frame(datasetKey = names(d.target),count = as.numeric(d.target))
rgbif::derived_dataset(d.summary,"GBIF_test",
"Filetred and cleaned based on CoordinateCleaner",source_url="",
user=usr,pwd=pwd)
rgbif::derived_dataset(d.summary,"GBIF_test",
"Filetred and cleaned based on CoordinateCleaner",source_url="www.tata.com",
user=usr,pwd=pwd)
rgbif::derived_dataset(d.summary,"GBIF_test",
"Filetred and cleaned based on CoordinateCleaner",source_url="www.tata.com",
user=usr,pwd=pwd)
rgbif::derived_dataset(d.summary,"GBIF_test",
"Filetred and cleaned based on CoordinateCleaner",source_url="https://www.tata.com/",
user=usr,pwd=pwd)
rgbif::derived_dataset(d.summary,"GBIF_test",
"Filetred and cleaned based on CoordinateCleaner",source_url="https://example.com/",
user=usr,pwd=pwd)
remove.packages("wsl.gbif")
devtools::document()
system("R CMD Rd2pdf . --title=wsl.gbif --output=./wsl_gbif.pdf --force --no-clean --internals")
remove.packages("wsl.gbif")
devtools::document()
system("R CMD Rd2pdf . --title=wsl.gbif --output=./wsl_gbif.pdf --force --no-clean --internals")
devtools::document()
system("R CMD Rd2pdf . --title=wsl.gbif --output=./wsl_gbif.pdf --force --no-clean --internals")
devtools::document()
system("R CMD Rd2pdf . --title=wsl.gbif --output=./wsl_gbif.pdf --force --no-clean --internals")
devtools::document()
system("R CMD Rd2pdf . --title=wsl.gbif --output=./wsl_gbif.pdf --force --no-clean --internals")
devtools::document()
system("R CMD Rd2pdf . --title=wsl.gbif --output=./wsl_gbif.pdf --force --no-clean --internals")
remove.packages("wsl.biodiv")
devtools::document()
system("R CMD Rd2pdf . --title=wsl.gbif --output=./wsl_gbif.pdf --force --no-clean --internals")
devtools::document()
system("R CMD Rd2pdf . --title=wsl.gbif --output=./wsl_gbif.pdf --force --no-clean --internals")
devtools::document()
system("R CMD Rd2pdf . --title=wsl.gbif --output=./wsl_gbif.pdf --force --no-clean --internals")
devtools::document()
system("R CMD Rd2pdf . --title=wsl.gbif --output=./wsl_gbif.pdf --force --no-clean --internals")
install.packages("../wsl.gbif_r_package",repos=NULL,type="source")
install.packages("../wsl.gbif_r_package",repos=NULL,type="source")
install.packages("../wsl.gbif_r_package",repos=NULL,type="source")
devtools::document()
system("R CMD Rd2pdf . --title=wsl.gbif --output=./wsl_gbif.pdf --force --no-clean --internals")
remove.packages("wsl.biodiv")
remove.packages("wsl.gbif")
devtools::document()
system("R CMD Rd2pdf . --title=wsl.gbif --output=./wsl_gbif.pdf --force --no-clean --internals")
install.packages("../wsl.gbif_r_package",repos=NULL,type="source")
devtools::document()
system("R CMD Rd2pdf . --title=wsl.gbif --output=./wsl_gbif.pdf --force --no-clean --internals")
install.packages("../wsl.gbif_r_package",repos=NULL,type="source")
devtools::document()
system("R CMD Rd2pdf . --title=wsl.gbif --output=./wsl_gbif.pdf --force --no-clean --internals")
devtools::document()
system("R CMD Rd2pdf . --title=wsl.gbif --output=./wsl_gbif.pdf --force --no-clean --internals")
install.packages("../wsl.gbif_r_package",repos=NULL,type="source")
?wsl_gbif
?wsl_taXnames
remove.packages("wsl.gbif")
devtools::document()
devtools::document()
system("R CMD Rd2pdf . --title=wsl.gbif --output=./wsl_gbif.pdf --force --no-clean --internals")
install.packages("../wsl.gbif_r_package",repos=NULL,type="source")
devtools::document()
devtools::document()
system("R CMD Rd2pdf . --title=wsl.gbif --output=./wsl_gbif.pdf --force --no-clean --internals")
install.packages("../wsl.gbif_r_package",repos=NULL,type="source")
library(wsl.gbif)
data(AlpineConvention_lonlat)
data(exrst)
devtools::document()
system("R CMD Rd2pdf . --title=wsl.gbif --output=./wsl_gbif.pdf --force --no-clean --internals")
remove.packages("wsl.gbif")
install.packages("../wsl.gbif_r_package",repos=NULL,type="source")
devtools::document()
remove.packages("wsl.gbif")
system("R CMD Rd2pdf . --title=wsl.gbif --output=./wsl_gbif.pdf --force --no-clean --internals")
install.packages("../wsl.gbif_r_package",repos=NULL,type="source")
devtools::document()
devtools::document()
devtools::document()
remove.packages("wsl.gbif")
system("R CMD Rd2pdf . --title=wsl.gbif --output=./wsl_gbif.pdf --force --no-clean --internals")
devtools::document()
system("R CMD Rd2pdf . --title=wsl.gbif --output=./wsl_gbif.pdf --force --no-clean --internals")
devtools::document()
system("R CMD Rd2pdf . --title=wsl.gbif --output=./wsl_gbif.pdf --force --no-clean --internals")
install.packages("../wsl.gbif_r_package",repos=NULL,type="source")
library(wsl.gbif)
?wsl_doi
obs.pt = wsl_gbif("Panthera tigris")
obs.am = wsl_gbif("Ailuropoda melanoleuca")
wsl_doi(obs.pt,title="GBIF_test1",description="A small example 1",
source_url="https://example.com/",user="ginette",pwd="BUg7t%oE@Nh6")
wsl_doi(list(obs.pt,obs.am),title="GBIF_test2",description="A small example 2",
source_url="https://example.com/",user="ginette",pwd="BUg7t%oE@Nh6")
?wsl_obs_filter
data(geo_dat)
data(exrst)
obs.arcto = wsl_gbif("Arctostaphylos alpinus",geo=shp.lonlat)
obs.saxi = wsl_gbif("Saxifraga cernua",geo=shp.lonlat)
plot(vect(shp.lonlat))
points(obs.arcto[,c("decimalLongitude","decimalLatitude")],pch=20,col="#238b4550",cex=1)
points(obs.saxi[,c("decimalLongitude","decimalLatitude")],pch=20,col="#99000d50",cex=1)
# rbind both datasets
both.sp = rbind(obs.arcto,obs.saxi)
# Run function
obs.filt = wsl_obs_filter(both.sp,rst)
# Check new points
x11();plot(vect(shp.lonlat))
points(obs.filt[obs.filt$Species%in%"Arctostaphylos alpinus",c("x","y")],pch=20,col="#238b4550",cex=1)
points(obs.filt[obs.filt$Species%in%"Saxifraga cernua",c("x","y")],pch=20,col="#99000d50",cex=1)
?wsl_gbif
library(maptools)
data(wrld_simpl)
# Load the Alps Extend
data(geo_dat)
# Downloading worldwide the observations of Panthera tigris
test1 = wsl_gbif("Panthera tigris",basis=c("OBSERVATION","HUMAN_OBSERVATION"))
plot(wrld_simpl)
points(test1[,c("decimalLongitude","decimalLatitude")],pch=20,col="#238b4550",cex=4)
test3 = wsl_gbif("Ailuropoda melanoleuca", grain = 100000 , duplicates = TRUE,
time_period = c(1990,3000), add_infos = c("recordedBy","issue"))
plot(wrld_simpl)
points(test3[,c("decimalLongitude","decimalLatitude")],pch=20,col="#238b4550",cex=4)
?makeTiles
?make_tiles
data(geo_dat)
# Apply the function to divide the extent in ~20 fragments
mt = make_tiles(geo=shp.lonlat,Ntiles=20,sext=TRUE); mt
# How to create new SpatExtent fragments
lapply(mt[[2]],function(x) ext(x))
?wsl_taxonomy
wsl_taxonomy("Cypripedium calceolus",all=FALSE)
wsl_taxonomy("Cypripedium calceolus",all=TRUE)
devtools::document()
system("R CMD Rd2pdf . --title=wsl.gbif --output=./wsl_gbif.pdf --force --no-clean --internals")
