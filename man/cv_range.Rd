% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/cv_range.R
\name{cv_range}
\alias{cv_range}
\title{Evaluate the performance of a range map with cross-validation}
\usage{
cv_range(
  range_object = NULL,
  cv = "random-cv",
  nfolds = 5,
  nblocks = 2,
  backpoints = 10000
)
}
\arguments{
\item{range_object}{A get_range() object.}

\item{cv}{Character. Should the range map be evaluated with random ('random-cv') or spatial block
cross validation ('block-cv').}

\item{nfolds}{Numeric. Number of chosen folds for cross-validation.}

\item{nblocks}{Numeric. Only applies if 'block-cv' is employed. Defined the number of blocks per fold.}

\item{backpoints}{Numeric (optional). Number of regular background points that should be sampled. Defaut is 10,000.}
}
\value{
A data.frame with 'nfolds' rows and 8 evaluation columns.
}
\description{
Assesses the accuracy of a species range map by applying cross-validation using the observations
(restricted to the extent) and function arguments of a get_range() object. By using these initial parameters,
the function iteratively re-generates the range map n times, each time using a defined percentage of the extent
observations for training, while evaluating the quality of the range map using the remaining records
(by default, nfolds = 5 -> calibration = 80%, evaluation = 20%). Two cross-validation methods are available:
random and spatial block cross-validation. In random cross-validation, a random subset of the observations
is chosen for training in each fold, with the generated map evaluated on the remaining data. In spatial block
cross-validation, the observations are spatially divided into blocks, and each fold uses a different set
of blocks for training and testing, ensuring that spatial dependencies are properly considered in the
evaluation process. Evaluation metrics here employed are Precision, Sensitivity, Specificity and TSS.
It is important to note that since no absences are available for evaluation, a uniform random layer of
background points is first generated over the study area extent and used as pseudo-absences proxy.
}
\examples{
\dontrun{
# Load available ecoregions
eco_terra <- read_bioreg(bioreg_name = "eco_terra", save_dir = NULL)

# First download the worldwide observations of Panthera tigris from GBIF
occ <- get_gbif(sp_name = "Panthera tigris",
                   time_period = c(2000, 3000),
                   basis = c("OBSERVATION",
                             "HUMAN_OBSERVATION",
                             "MACHINE_OBSERVATION",
                             "OCCURRENCE"))

# Make range from occurance points
range <- get_range(occ, eco_terra,"ECO_NAME")

cv_range <- cv_range(range_object = range, cv = 'block-cv', nfolds = 5, nblocks = 2)
}
}
\references{
Roberts, D. R., Bahn, V., Ciuti, S., Boyce, M. S., Elith, J., Guillera‐Arroita, G., ... & Dormann, C. F.
(2017). Cross‐validation strategies for data with temporal, spatial, hierarchical, or phylogenetic structure.
Ecography, 40(8), 913-929.

Chauvier, Y., Zimmermann, N. E., Poggiato, G., Bystrova, D., Brun, P., & Thuiller, W. (2021).
Novel methods to correct for observer and sampling bias in presence‐only species distribution models.
Global Ecology and Biogeography, 30(11), 2312-2325.
}
