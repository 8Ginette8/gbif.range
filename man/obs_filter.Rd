% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/obs_filter.R
\name{obs_filter}
\alias{obs_filter}
\title{Filter a set of GBIF observations according to a defined grain}
\usage{
obs_filter(gbifs, grid)
}
\arguments{
\item{gbifs}{One get_gbif() output including one or several species. Note
that if GBIF absences are kept in the output(s), the function should be used
distinctively for observations and absences.}

\item{grid}{Object of class SpatRaster, RasterLayer, RasterBrick or
RasterStack of desired resolution and extent (WGS84).}
}
\value{
Data frame with two columns named 'x' and 'y' comprising
the new set of observations filtered at grid resolution.
}
\description{
Whereas the 'grain' parameter in get_gbif() allows GBIF observations to be
filtered according to a certain spatial precision, obs_filter() accepts
as input a get_gbif() output (one or several species) and filter the
observations according to a given grid resolution (one observation
per pixel grid kept). This function allows the user to refine the density of
GBIF observations according to a defined analysis/study's resolution.
}
\examples{
#read example shapefile
shp.lonlat <- terra::vect(paste0(system.file(package = "gbif.range"),"/data/shp_lonlat.shp"))

# Downloading in the European Alps the observations of two plant species
obs.arcto = get_gbif("Arctostaphylos alpinus",geo=shp.lonlat)
obs.saxi = get_gbif("Saxifraga cernua",geo=shp.lonlat)
terra::plot(shp.lonlat)
points(obs.arcto[,c("decimalLongitude","decimalLatitude")],pch=20,col="#238b4550",cex=1)
points(obs.saxi[,c("decimalLongitude","decimalLatitude")],pch=20,col="#99000d50",cex=1)

# rbind both datasets
both.sp = rbind(obs.arcto,obs.saxi)

# Run function
obs.filt = obs_filter(both.sp,rst)

# Check new points
x11();plot(shp.lonlat)

points(obs.filt[obs.filt$Species\%in\%"Arctostaphylos alpinus",c("x","y")],
pch=20,col="#238b4550",cex=1)

points(obs.filt[obs.filt$Species\%in\%"Saxifraga cernua",c("x","y")],
pch=20,col="#99000d50",cex=1)
}
